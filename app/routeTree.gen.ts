/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ListingsIndexImport } from './routes/listings/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as ListingsListingIdImport } from './routes/listings/$listingId'
import { Route as BlogSlugImport } from './routes/blog/$slug'

// Create/Update Routes

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ListingsIndexRoute = ListingsIndexImport.update({
  id: '/listings/',
  path: '/listings/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const ListingsListingIdRoute = ListingsListingIdImport.update({
  id: '/listings/$listingId',
  path: '/listings/$listingId',
  getParentRoute: () => rootRoute,
} as any)

const BlogSlugRoute = BlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugImport
      parentRoute: typeof rootRoute
    }
    '/listings/$listingId': {
      id: '/listings/$listingId'
      path: '/listings/$listingId'
      fullPath: '/listings/$listingId'
      preLoaderRoute: typeof ListingsListingIdImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/listings/': {
      id: '/listings/'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/blog': typeof BlogIndexRoute
  '/listings': typeof ListingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/blog': typeof BlogIndexRoute
  '/listings': typeof ListingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/blog/': typeof BlogIndexRoute
  '/listings/': typeof ListingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/blog/$slug'
    | '/listings/$listingId'
    | '/blog'
    | '/listings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/blog/$slug'
    | '/listings/$listingId'
    | '/blog'
    | '/listings'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/blog/$slug'
    | '/listings/$listingId'
    | '/blog/'
    | '/listings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  BlogSlugRoute: typeof BlogSlugRoute
  ListingsListingIdRoute: typeof ListingsListingIdRoute
  BlogIndexRoute: typeof BlogIndexRoute
  ListingsIndexRoute: typeof ListingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  BlogSlugRoute: BlogSlugRoute,
  ListingsListingIdRoute: ListingsListingIdRoute,
  BlogIndexRoute: BlogIndexRoute,
  ListingsIndexRoute: ListingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/blog/$slug",
        "/listings/$listingId",
        "/blog/",
        "/listings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/blog/$slug": {
      "filePath": "blog/$slug.tsx"
    },
    "/listings/$listingId": {
      "filePath": "listings/$listingId.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/listings/": {
      "filePath": "listings/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
